   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"system_stm32f10x.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SystemCoreClock
  19              		.data
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 00A24A04 		.word	72000000
  25              		.global	AHBPrescTable
  26              		.align	2
  29              	AHBPrescTable:
  30 0004 00       		.byte	0
  31 0005 00       		.byte	0
  32 0006 00       		.byte	0
  33 0007 00       		.byte	0
  34 0008 00       		.byte	0
  35 0009 00       		.byte	0
  36 000a 00       		.byte	0
  37 000b 00       		.byte	0
  38 000c 01       		.byte	1
  39 000d 02       		.byte	2
  40 000e 03       		.byte	3
  41 000f 04       		.byte	4
  42 0010 06       		.byte	6
  43 0011 07       		.byte	7
  44 0012 08       		.byte	8
  45 0013 09       		.byte	9
  46              		.text
  47              		.align	2
  48              		.global	SystemInit
  49              		.thumb
  50              		.thumb_func
  52              	SystemInit:
  53              	.LFB29:
  54              		.file 1 "../CMSIS/system_stm32f10x.c"
   1:../CMSIS/system_stm32f10x.c **** /**
   2:../CMSIS/system_stm32f10x.c ****   ******************************************************************************
   3:../CMSIS/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:../CMSIS/system_stm32f10x.c ****   * @author  MCD Application Team
   5:../CMSIS/system_stm32f10x.c ****   * @version V3.5.0
   6:../CMSIS/system_stm32f10x.c ****   * @date    11-March-2011
   7:../CMSIS/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../CMSIS/system_stm32f10x.c ****   * 
   9:../CMSIS/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:../CMSIS/system_stm32f10x.c ****   *     user application:
  11:../CMSIS/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:../CMSIS/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:../CMSIS/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:../CMSIS/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:../CMSIS/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:../CMSIS/system_stm32f10x.c ****   *
  17:../CMSIS/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:../CMSIS/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:../CMSIS/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:../CMSIS/system_stm32f10x.c ****   *                                     
  21:../CMSIS/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:../CMSIS/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:../CMSIS/system_stm32f10x.c ****   *                                 during program execution.
  24:../CMSIS/system_stm32f10x.c ****   *
  25:../CMSIS/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:../CMSIS/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:../CMSIS/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:../CMSIS/system_stm32f10x.c ****   *
  29:../CMSIS/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:../CMSIS/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:../CMSIS/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:../CMSIS/system_stm32f10x.c ****   *
  33:../CMSIS/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:../CMSIS/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:../CMSIS/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:../CMSIS/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:../CMSIS/system_stm32f10x.c ****   *    configuration.
  38:../CMSIS/system_stm32f10x.c ****   *        
  39:../CMSIS/system_stm32f10x.c ****   ******************************************************************************
  40:../CMSIS/system_stm32f10x.c ****   * @attention
  41:../CMSIS/system_stm32f10x.c ****   *
  42:../CMSIS/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:../CMSIS/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:../CMSIS/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:../CMSIS/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:../CMSIS/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:../CMSIS/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:../CMSIS/system_stm32f10x.c ****   *
  49:../CMSIS/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:../CMSIS/system_stm32f10x.c ****   ******************************************************************************
  51:../CMSIS/system_stm32f10x.c ****   */
  52:../CMSIS/system_stm32f10x.c **** 
  53:../CMSIS/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:../CMSIS/system_stm32f10x.c ****   * @{
  55:../CMSIS/system_stm32f10x.c ****   */
  56:../CMSIS/system_stm32f10x.c **** 
  57:../CMSIS/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:../CMSIS/system_stm32f10x.c ****   * @{
  59:../CMSIS/system_stm32f10x.c ****   */  
  60:../CMSIS/system_stm32f10x.c ****   
  61:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:../CMSIS/system_stm32f10x.c ****   * @{
  63:../CMSIS/system_stm32f10x.c ****   */
  64:../CMSIS/system_stm32f10x.c **** 
  65:../CMSIS/system_stm32f10x.c **** #include "stm32f10x.h"
  66:../CMSIS/system_stm32f10x.c **** 
  67:../CMSIS/system_stm32f10x.c **** /**
  68:../CMSIS/system_stm32f10x.c ****   * @}
  69:../CMSIS/system_stm32f10x.c ****   */
  70:../CMSIS/system_stm32f10x.c **** 
  71:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:../CMSIS/system_stm32f10x.c ****   * @{
  73:../CMSIS/system_stm32f10x.c ****   */
  74:../CMSIS/system_stm32f10x.c **** 
  75:../CMSIS/system_stm32f10x.c **** /**
  76:../CMSIS/system_stm32f10x.c ****   * @}
  77:../CMSIS/system_stm32f10x.c ****   */
  78:../CMSIS/system_stm32f10x.c **** 
  79:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:../CMSIS/system_stm32f10x.c ****   * @{
  81:../CMSIS/system_stm32f10x.c ****   */
  82:../CMSIS/system_stm32f10x.c **** 
  83:../CMSIS/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:../CMSIS/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:../CMSIS/system_stm32f10x.c ****    
  86:../CMSIS/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:../CMSIS/system_stm32f10x.c ****    ============== 
  88:../CMSIS/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:../CMSIS/system_stm32f10x.c **** 
  90:../CMSIS/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:../CMSIS/system_stm32f10x.c ****       maximum frequency.
  92:../CMSIS/system_stm32f10x.c ****       
  93:../CMSIS/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:../CMSIS/system_stm32f10x.c ****     source.
  95:../CMSIS/system_stm32f10x.c **** 
  96:../CMSIS/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:../CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:../CMSIS/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:../CMSIS/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:../CMSIS/system_stm32f10x.c ****           used to drive the System clock.
 101:../CMSIS/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:../CMSIS/system_stm32f10x.c ****           the System clock.
 103:../CMSIS/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:../CMSIS/system_stm32f10x.c ****     */
 105:../CMSIS/system_stm32f10x.c ****     
 106:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:../CMSIS/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:../CMSIS/system_stm32f10x.c **** #else
 110:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:../CMSIS/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:../CMSIS/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:../CMSIS/system_stm32f10x.c **** #endif
 117:../CMSIS/system_stm32f10x.c **** 
 118:../CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:../CMSIS/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:../CMSIS/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:../CMSIS/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:../CMSIS/system_stm32f10x.c **** #endif
 124:../CMSIS/system_stm32f10x.c **** 
 125:../CMSIS/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:../CMSIS/system_stm32f10x.c ****      Internal SRAM. */ 
 127:../CMSIS/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:../CMSIS/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:../CMSIS/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:../CMSIS/system_stm32f10x.c **** 
 131:../CMSIS/system_stm32f10x.c **** 
 132:../CMSIS/system_stm32f10x.c **** /**
 133:../CMSIS/system_stm32f10x.c ****   * @}
 134:../CMSIS/system_stm32f10x.c ****   */
 135:../CMSIS/system_stm32f10x.c **** 
 136:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:../CMSIS/system_stm32f10x.c ****   * @{
 138:../CMSIS/system_stm32f10x.c ****   */
 139:../CMSIS/system_stm32f10x.c **** 
 140:../CMSIS/system_stm32f10x.c **** /**
 141:../CMSIS/system_stm32f10x.c ****   * @}
 142:../CMSIS/system_stm32f10x.c ****   */
 143:../CMSIS/system_stm32f10x.c **** 
 144:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:../CMSIS/system_stm32f10x.c ****   * @{
 146:../CMSIS/system_stm32f10x.c ****   */
 147:../CMSIS/system_stm32f10x.c **** 
 148:../CMSIS/system_stm32f10x.c **** /*******************************************************************************
 149:../CMSIS/system_stm32f10x.c **** *  Clock Definitions
 150:../CMSIS/system_stm32f10x.c **** *******************************************************************************/
 151:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:../CMSIS/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:../CMSIS/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:../CMSIS/system_stm32f10x.c **** #endif
 166:../CMSIS/system_stm32f10x.c **** 
 167:../CMSIS/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:../CMSIS/system_stm32f10x.c **** /**
 169:../CMSIS/system_stm32f10x.c ****   * @}
 170:../CMSIS/system_stm32f10x.c ****   */
 171:../CMSIS/system_stm32f10x.c **** 
 172:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:../CMSIS/system_stm32f10x.c ****   * @{
 174:../CMSIS/system_stm32f10x.c ****   */
 175:../CMSIS/system_stm32f10x.c **** 
 176:../CMSIS/system_stm32f10x.c **** static void SetSysClock(void);
 177:../CMSIS/system_stm32f10x.c **** 
 178:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:../CMSIS/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:../CMSIS/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:../CMSIS/system_stm32f10x.c **** #endif
 191:../CMSIS/system_stm32f10x.c **** 
 192:../CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:../CMSIS/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:../CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:../CMSIS/system_stm32f10x.c **** 
 196:../CMSIS/system_stm32f10x.c **** /**
 197:../CMSIS/system_stm32f10x.c ****   * @}
 198:../CMSIS/system_stm32f10x.c ****   */
 199:../CMSIS/system_stm32f10x.c **** 
 200:../CMSIS/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:../CMSIS/system_stm32f10x.c ****   * @{
 202:../CMSIS/system_stm32f10x.c ****   */
 203:../CMSIS/system_stm32f10x.c **** 
 204:../CMSIS/system_stm32f10x.c **** /**
 205:../CMSIS/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:../CMSIS/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:../CMSIS/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:../CMSIS/system_stm32f10x.c ****   * @param  None
 210:../CMSIS/system_stm32f10x.c ****   * @retval None
 211:../CMSIS/system_stm32f10x.c ****   */
 212:../CMSIS/system_stm32f10x.c **** void SystemInit (void)
 213:../CMSIS/system_stm32f10x.c **** {
  55              		.loc 1 213 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 7, -8
  63              		.cfi_offset 14, -4
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI1:
  66              		.cfi_def_cfa_register 7
 214:../CMSIS/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:../CMSIS/system_stm32f10x.c ****   /* Set HSION bit */
 216:../CMSIS/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
  67              		.loc 1 216 0
  68 0004 154B     		ldr	r3, .L2
  69 0006 154A     		ldr	r2, .L2
  70 0008 1268     		ldr	r2, [r2, #0]
  71 000a 42F00102 		orr	r2, r2, #1
  72 000e 1A60     		str	r2, [r3, #0]
 217:../CMSIS/system_stm32f10x.c **** 
 218:../CMSIS/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:../CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:../CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  73              		.loc 1 220 0
  74 0010 124A     		ldr	r2, .L2
  75 0012 124B     		ldr	r3, .L2
  76 0014 5968     		ldr	r1, [r3, #4]
  77 0016 124B     		ldr	r3, .L2+4
  78 0018 0B40     		ands	r3, r3, r1
  79 001a 5360     		str	r3, [r2, #4]
 221:../CMSIS/system_stm32f10x.c **** #else
 222:../CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:../CMSIS/system_stm32f10x.c ****   
 225:../CMSIS/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:../CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  80              		.loc 1 226 0
  81 001c 0F4A     		ldr	r2, .L2
  82 001e 0F4B     		ldr	r3, .L2
  83 0020 1B68     		ldr	r3, [r3, #0]
  84 0022 23F08473 		bic	r3, r3, #17301504
  85 0026 23F48033 		bic	r3, r3, #65536
  86 002a 1360     		str	r3, [r2, #0]
 227:../CMSIS/system_stm32f10x.c **** 
 228:../CMSIS/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:../CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  87              		.loc 1 229 0
  88 002c 0B4B     		ldr	r3, .L2
  89 002e 0B4A     		ldr	r2, .L2
  90 0030 1268     		ldr	r2, [r2, #0]
  91 0032 22F48022 		bic	r2, r2, #262144
  92 0036 1A60     		str	r2, [r3, #0]
 230:../CMSIS/system_stm32f10x.c **** 
 231:../CMSIS/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:../CMSIS/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  93              		.loc 1 232 0
  94 0038 084B     		ldr	r3, .L2
  95 003a 084A     		ldr	r2, .L2
  96 003c 5268     		ldr	r2, [r2, #4]
  97 003e 22F4FE02 		bic	r2, r2, #8323072
  98 0042 5A60     		str	r2, [r3, #4]
 233:../CMSIS/system_stm32f10x.c **** 
 234:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:../CMSIS/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:../CMSIS/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:../CMSIS/system_stm32f10x.c **** 
 238:../CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:../CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:../CMSIS/system_stm32f10x.c **** 
 241:../CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:../CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:../CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:../CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:../CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:../CMSIS/system_stm32f10x.c **** 
 247:../CMSIS/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:../CMSIS/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:../CMSIS/system_stm32f10x.c **** #else
 250:../CMSIS/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:../CMSIS/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
  99              		.loc 1 251 0
 100 0044 054B     		ldr	r3, .L2
 101 0046 4FF41F02 		mov	r2, #10420224
 102 004a 9A60     		str	r2, [r3, #8]
 252:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:../CMSIS/system_stm32f10x.c ****     
 254:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:../CMSIS/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:../CMSIS/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:../CMSIS/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:../CMSIS/system_stm32f10x.c **** #endif 
 259:../CMSIS/system_stm32f10x.c **** 
 260:../CMSIS/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:../CMSIS/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:../CMSIS/system_stm32f10x.c ****   SetSysClock();
 103              		.loc 1 262 0
 104 004c 00F07EF8 		bl	SetSysClock
 263:../CMSIS/system_stm32f10x.c **** 
 264:../CMSIS/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:../CMSIS/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:../CMSIS/system_stm32f10x.c **** #else
 267:../CMSIS/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 105              		.loc 1 267 0
 106 0050 044B     		ldr	r3, .L2+8
 107 0052 4FF00062 		mov	r2, #134217728
 108 0056 9A60     		str	r2, [r3, #8]
 268:../CMSIS/system_stm32f10x.c **** #endif 
 269:../CMSIS/system_stm32f10x.c **** }
 109              		.loc 1 269 0
 110 0058 80BD     		pop	{r7, pc}
 111              	.L3:
 112 005a 00BF     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 0000FFF8 		.word	-117506048
 116 0064 00ED00E0 		.word	-536810240
 117              		.cfi_endproc
 118              	.LFE29:
 120              		.align	2
 121              		.global	SystemCoreClockUpdate
 122              		.thumb
 123              		.thumb_func
 125              	SystemCoreClockUpdate:
 126              	.LFB30:
 270:../CMSIS/system_stm32f10x.c **** 
 271:../CMSIS/system_stm32f10x.c **** /**
 272:../CMSIS/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:../CMSIS/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:../CMSIS/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:../CMSIS/system_stm32f10x.c ****   *         other parameters.
 276:../CMSIS/system_stm32f10x.c ****   *           
 277:../CMSIS/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:../CMSIS/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:../CMSIS/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:../CMSIS/system_stm32f10x.c ****   *     
 281:../CMSIS/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:../CMSIS/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:../CMSIS/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:../CMSIS/system_stm32f10x.c ****   *             
 285:../CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:../CMSIS/system_stm32f10x.c ****   *                                              
 287:../CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:../CMSIS/system_stm32f10x.c ****   *                          
 289:../CMSIS/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:../CMSIS/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:../CMSIS/system_stm32f10x.c ****   *         
 292:../CMSIS/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:../CMSIS/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:../CMSIS/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:../CMSIS/system_stm32f10x.c ****   *    
 296:../CMSIS/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:../CMSIS/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:../CMSIS/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:../CMSIS/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:../CMSIS/system_stm32f10x.c ****   *                
 301:../CMSIS/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:../CMSIS/system_stm32f10x.c ****   *           value for HSE crystal.
 303:../CMSIS/system_stm32f10x.c ****   * @param  None
 304:../CMSIS/system_stm32f10x.c ****   * @retval None
 305:../CMSIS/system_stm32f10x.c ****   */
 306:../CMSIS/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:../CMSIS/system_stm32f10x.c **** {
 127              		.loc 1 307 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 16
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0068 80B4     		push	{r7}
 133              	.LCFI2:
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 006a 85B0     		sub	sp, sp, #20
 137              	.LCFI3:
 138              		.cfi_def_cfa_offset 24
 139 006c 00AF     		add	r7, sp, #0
 140              	.LCFI4:
 141              		.cfi_def_cfa_register 7
 308:../CMSIS/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 142              		.loc 1 308 0
 143 006e 4FF00003 		mov	r3, #0
 144 0072 FB60     		str	r3, [r7, #12]
 145 0074 4FF00003 		mov	r3, #0
 146 0078 BB60     		str	r3, [r7, #8]
 147 007a 4FF00003 		mov	r3, #0
 148 007e 7B60     		str	r3, [r7, #4]
 309:../CMSIS/system_stm32f10x.c **** 
 310:../CMSIS/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:../CMSIS/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:../CMSIS/system_stm32f10x.c **** 
 314:../CMSIS/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:../CMSIS/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:../CMSIS/system_stm32f10x.c ****     
 318:../CMSIS/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:../CMSIS/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 149              		.loc 1 319 0
 150 0080 2D4B     		ldr	r3, .L14
 151 0082 5B68     		ldr	r3, [r3, #4]
 152 0084 03F00C03 		and	r3, r3, #12
 153 0088 FB60     		str	r3, [r7, #12]
 320:../CMSIS/system_stm32f10x.c ****   
 321:../CMSIS/system_stm32f10x.c ****   switch (tmp)
 154              		.loc 1 321 0
 155 008a FB68     		ldr	r3, [r7, #12]
 156 008c 042B     		cmp	r3, #4
 157 008e 07D0     		beq	.L7
 158 0090 082B     		cmp	r3, #8
 159 0092 09D0     		beq	.L8
 160 0094 002B     		cmp	r3, #0
 161 0096 35D1     		bne	.L13
 162              	.L6:
 322:../CMSIS/system_stm32f10x.c ****   {
 323:../CMSIS/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:../CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 163              		.loc 1 324 0
 164 0098 284B     		ldr	r3, .L14+4
 165 009a 294A     		ldr	r2, .L14+8
 166 009c 1A60     		str	r2, [r3, #0]
 325:../CMSIS/system_stm32f10x.c ****       break;
 167              		.loc 1 325 0
 168 009e 35E0     		b	.L9
 169              	.L7:
 326:../CMSIS/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:../CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 170              		.loc 1 327 0
 171 00a0 264B     		ldr	r3, .L14+4
 172 00a2 274A     		ldr	r2, .L14+8
 173 00a4 1A60     		str	r2, [r3, #0]
 328:../CMSIS/system_stm32f10x.c ****       break;
 174              		.loc 1 328 0
 175 00a6 31E0     		b	.L9
 176              	.L8:
 329:../CMSIS/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:../CMSIS/system_stm32f10x.c **** 
 331:../CMSIS/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:../CMSIS/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 177              		.loc 1 332 0
 178 00a8 234B     		ldr	r3, .L14
 179 00aa 5B68     		ldr	r3, [r3, #4]
 180 00ac 03F47013 		and	r3, r3, #3932160
 181 00b0 BB60     		str	r3, [r7, #8]
 333:../CMSIS/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 182              		.loc 1 333 0
 183 00b2 214B     		ldr	r3, .L14
 184 00b4 5B68     		ldr	r3, [r3, #4]
 185 00b6 03F48033 		and	r3, r3, #65536
 186 00ba 7B60     		str	r3, [r7, #4]
 334:../CMSIS/system_stm32f10x.c ****       
 335:../CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:../CMSIS/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 187              		.loc 1 336 0
 188 00bc BB68     		ldr	r3, [r7, #8]
 189 00be 4FEA9343 		lsr	r3, r3, #18
 190 00c2 03F10203 		add	r3, r3, #2
 191 00c6 BB60     		str	r3, [r7, #8]
 337:../CMSIS/system_stm32f10x.c ****       
 338:../CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 192              		.loc 1 338 0
 193 00c8 7B68     		ldr	r3, [r7, #4]
 194 00ca 002B     		cmp	r3, #0
 195 00cc 06D1     		bne	.L10
 339:../CMSIS/system_stm32f10x.c ****       {
 340:../CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:../CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 196              		.loc 1 341 0
 197 00ce BB68     		ldr	r3, [r7, #8]
 198 00d0 1C4A     		ldr	r2, .L14+12
 199 00d2 02FB03F2 		mul	r2, r2, r3
 200 00d6 194B     		ldr	r3, .L14+4
 201 00d8 1A60     		str	r2, [r3, #0]
 342:../CMSIS/system_stm32f10x.c ****       }
 343:../CMSIS/system_stm32f10x.c ****       else
 344:../CMSIS/system_stm32f10x.c ****       {
 345:../CMSIS/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:../CMSIS/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:../CMSIS/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:../CMSIS/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:../CMSIS/system_stm32f10x.c ****  #else
 350:../CMSIS/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:../CMSIS/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:../CMSIS/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:../CMSIS/system_stm32f10x.c ****         }
 355:../CMSIS/system_stm32f10x.c ****         else
 356:../CMSIS/system_stm32f10x.c ****         {
 357:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:../CMSIS/system_stm32f10x.c ****         }
 359:../CMSIS/system_stm32f10x.c ****  #endif
 360:../CMSIS/system_stm32f10x.c ****       }
 361:../CMSIS/system_stm32f10x.c **** #else
 362:../CMSIS/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:../CMSIS/system_stm32f10x.c ****       
 364:../CMSIS/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:../CMSIS/system_stm32f10x.c ****       {
 366:../CMSIS/system_stm32f10x.c ****          pllmull += 2;
 367:../CMSIS/system_stm32f10x.c ****       }
 368:../CMSIS/system_stm32f10x.c ****       else
 369:../CMSIS/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:../CMSIS/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:../CMSIS/system_stm32f10x.c ****       }
 372:../CMSIS/system_stm32f10x.c ****             
 373:../CMSIS/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:../CMSIS/system_stm32f10x.c ****       {
 375:../CMSIS/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:../CMSIS/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:../CMSIS/system_stm32f10x.c ****       }
 378:../CMSIS/system_stm32f10x.c ****       else
 379:../CMSIS/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:../CMSIS/system_stm32f10x.c ****         
 381:../CMSIS/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:../CMSIS/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:../CMSIS/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:../CMSIS/system_stm32f10x.c ****         
 385:../CMSIS/system_stm32f10x.c ****         if (prediv1source == 0)
 386:../CMSIS/system_stm32f10x.c ****         { 
 387:../CMSIS/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:../CMSIS/system_stm32f10x.c ****         }
 390:../CMSIS/system_stm32f10x.c ****         else
 391:../CMSIS/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:../CMSIS/system_stm32f10x.c ****           
 393:../CMSIS/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:../CMSIS/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:../CMSIS/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:../CMSIS/system_stm32f10x.c ****         }
 398:../CMSIS/system_stm32f10x.c ****       }
 399:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:../CMSIS/system_stm32f10x.c ****       break;
 202              		.loc 1 400 0
 203 00da 17E0     		b	.L9
 204              	.L10:
 351:../CMSIS/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 205              		.loc 1 351 0
 206 00dc 164B     		ldr	r3, .L14
 207 00de 5B68     		ldr	r3, [r3, #4]
 208 00e0 03F40033 		and	r3, r3, #131072
 209 00e4 002B     		cmp	r3, #0
 210 00e6 06D0     		beq	.L12
 353:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 211              		.loc 1 353 0
 212 00e8 BB68     		ldr	r3, [r7, #8]
 213 00ea 164A     		ldr	r2, .L14+12
 214 00ec 02FB03F2 		mul	r2, r2, r3
 215 00f0 124B     		ldr	r3, .L14+4
 216 00f2 1A60     		str	r2, [r3, #0]
 217              		.loc 1 400 0
 218 00f4 0AE0     		b	.L9
 219              	.L12:
 357:../CMSIS/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 220              		.loc 1 357 0
 221 00f6 BB68     		ldr	r3, [r7, #8]
 222 00f8 114A     		ldr	r2, .L14+8
 223 00fa 02FB03F2 		mul	r2, r2, r3
 224 00fe 0F4B     		ldr	r3, .L14+4
 225 0100 1A60     		str	r2, [r3, #0]
 226              		.loc 1 400 0
 227 0102 03E0     		b	.L9
 228              	.L13:
 401:../CMSIS/system_stm32f10x.c **** 
 402:../CMSIS/system_stm32f10x.c ****     default:
 403:../CMSIS/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 229              		.loc 1 403 0
 230 0104 0D4B     		ldr	r3, .L14+4
 231 0106 0E4A     		ldr	r2, .L14+8
 232 0108 1A60     		str	r2, [r3, #0]
 404:../CMSIS/system_stm32f10x.c ****       break;
 233              		.loc 1 404 0
 234 010a 00BF     		nop
 235              	.L9:
 405:../CMSIS/system_stm32f10x.c ****   }
 406:../CMSIS/system_stm32f10x.c ****   
 407:../CMSIS/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:../CMSIS/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:../CMSIS/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 236              		.loc 1 409 0
 237 010c 0A4B     		ldr	r3, .L14
 238 010e 5B68     		ldr	r3, [r3, #4]
 239 0110 03F0F003 		and	r3, r3, #240
 240 0114 4FEA1313 		lsr	r3, r3, #4
 241 0118 0B4A     		ldr	r2, .L14+16
 242 011a D35C     		ldrb	r3, [r2, r3]
 243 011c DBB2     		uxtb	r3, r3
 244 011e FB60     		str	r3, [r7, #12]
 410:../CMSIS/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:../CMSIS/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 245              		.loc 1 411 0
 246 0120 064B     		ldr	r3, .L14+4
 247 0122 1A68     		ldr	r2, [r3, #0]
 248 0124 FB68     		ldr	r3, [r7, #12]
 249 0126 22FA03F2 		lsr	r2, r2, r3
 250 012a 044B     		ldr	r3, .L14+4
 251 012c 1A60     		str	r2, [r3, #0]
 412:../CMSIS/system_stm32f10x.c **** }
 252              		.loc 1 412 0
 253 012e 07F11407 		add	r7, r7, #20
 254 0132 BD46     		mov	sp, r7
 255 0134 80BC     		pop	{r7}
 256 0136 7047     		bx	lr
 257              	.L15:
 258              		.align	2
 259              	.L14:
 260 0138 00100240 		.word	1073876992
 261 013c 00000000 		.word	SystemCoreClock
 262 0140 00127A00 		.word	8000000
 263 0144 00093D00 		.word	4000000
 264 0148 00000000 		.word	AHBPrescTable
 265              		.cfi_endproc
 266              	.LFE30:
 268              		.align	2
 269              		.thumb
 270              		.thumb_func
 272              	SetSysClock:
 273              	.LFB31:
 413:../CMSIS/system_stm32f10x.c **** 
 414:../CMSIS/system_stm32f10x.c **** /**
 415:../CMSIS/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:../CMSIS/system_stm32f10x.c ****   * @param  None
 417:../CMSIS/system_stm32f10x.c ****   * @retval None
 418:../CMSIS/system_stm32f10x.c ****   */
 419:../CMSIS/system_stm32f10x.c **** static void SetSysClock(void)
 420:../CMSIS/system_stm32f10x.c **** {
 274              		.loc 1 420 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 014c 80B5     		push	{r7, lr}
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 014e 00AF     		add	r7, sp, #0
 284              	.LCFI6:
 285              		.cfi_def_cfa_register 7
 421:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:../CMSIS/system_stm32f10x.c ****   SetSysClockToHSE();
 423:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:../CMSIS/system_stm32f10x.c ****   SetSysClockTo24();
 425:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:../CMSIS/system_stm32f10x.c ****   SetSysClockTo36();
 427:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:../CMSIS/system_stm32f10x.c ****   SetSysClockTo48();
 429:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:../CMSIS/system_stm32f10x.c ****   SetSysClockTo56();  
 431:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:../CMSIS/system_stm32f10x.c ****   SetSysClockTo72();
 286              		.loc 1 432 0
 287 0150 00F002F8 		bl	SetSysClockTo72
 433:../CMSIS/system_stm32f10x.c **** #endif
 434:../CMSIS/system_stm32f10x.c ****  
 435:../CMSIS/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:../CMSIS/system_stm32f10x.c ****     source (default after reset) */ 
 437:../CMSIS/system_stm32f10x.c **** }
 288              		.loc 1 437 0
 289 0154 80BD     		pop	{r7, pc}
 290              		.cfi_endproc
 291              	.LFE31:
 293 0156 00BF     		.align	2
 294              		.thumb
 295              		.thumb_func
 297              	SetSysClockTo72:
 298              	.LFB32:
 438:../CMSIS/system_stm32f10x.c **** 
 439:../CMSIS/system_stm32f10x.c **** /**
 440:../CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:../CMSIS/system_stm32f10x.c ****   *          before jump to __main
 442:../CMSIS/system_stm32f10x.c ****   * @param  None
 443:../CMSIS/system_stm32f10x.c ****   * @retval None
 444:../CMSIS/system_stm32f10x.c ****   */ 
 445:../CMSIS/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:../CMSIS/system_stm32f10x.c **** /**
 447:../CMSIS/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:../CMSIS/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:../CMSIS/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:../CMSIS/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:../CMSIS/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:../CMSIS/system_stm32f10x.c ****   * @param  None
 453:../CMSIS/system_stm32f10x.c ****   * @retval None
 454:../CMSIS/system_stm32f10x.c ****   */ 
 455:../CMSIS/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:../CMSIS/system_stm32f10x.c **** {
 457:../CMSIS/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:../CMSIS/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:../CMSIS/system_stm32f10x.c **** 
 460:../CMSIS/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:../CMSIS/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:../CMSIS/system_stm32f10x.c ****   
 463:../CMSIS/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:../CMSIS/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:../CMSIS/system_stm32f10x.c ****   
 466:../CMSIS/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:../CMSIS/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:../CMSIS/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:../CMSIS/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:../CMSIS/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:../CMSIS/system_stm32f10x.c ****   
 472:../CMSIS/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:../CMSIS/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:../CMSIS/system_stm32f10x.c **** 
 475:../CMSIS/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:../CMSIS/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:../CMSIS/system_stm32f10x.c **** 
 478:../CMSIS/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:../CMSIS/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:../CMSIS/system_stm32f10x.c **** 
 481:../CMSIS/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:../CMSIS/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:../CMSIS/system_stm32f10x.c ****    
 484:../CMSIS/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:../CMSIS/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:../CMSIS/system_stm32f10x.c ****   
 487:../CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:../CMSIS/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:../CMSIS/system_stm32f10x.c **** }
 490:../CMSIS/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:../CMSIS/system_stm32f10x.c **** 
 492:../CMSIS/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:../CMSIS/system_stm32f10x.c **** /**
 494:../CMSIS/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:../CMSIS/system_stm32f10x.c ****   * @param  None
 498:../CMSIS/system_stm32f10x.c ****   * @retval None
 499:../CMSIS/system_stm32f10x.c ****   */
 500:../CMSIS/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:../CMSIS/system_stm32f10x.c **** {
 502:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:../CMSIS/system_stm32f10x.c ****   
 504:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 506:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:../CMSIS/system_stm32f10x.c ****  
 508:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:../CMSIS/system_stm32f10x.c ****   do
 510:../CMSIS/system_stm32f10x.c ****   {
 511:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 513:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:../CMSIS/system_stm32f10x.c **** 
 515:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:../CMSIS/system_stm32f10x.c ****   {
 517:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:../CMSIS/system_stm32f10x.c ****   }
 519:../CMSIS/system_stm32f10x.c ****   else
 520:../CMSIS/system_stm32f10x.c ****   {
 521:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:../CMSIS/system_stm32f10x.c ****   }  
 523:../CMSIS/system_stm32f10x.c **** 
 524:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:../CMSIS/system_stm32f10x.c ****   {
 526:../CMSIS/system_stm32f10x.c **** 
 527:../CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:../CMSIS/system_stm32f10x.c **** 
 531:../CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:../CMSIS/system_stm32f10x.c **** 
 534:../CMSIS/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:../CMSIS/system_stm32f10x.c **** #else
 537:../CMSIS/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:../CMSIS/system_stm32f10x.c **** 	{
 539:../CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:../CMSIS/system_stm32f10x.c **** 	}
 541:../CMSIS/system_stm32f10x.c **** 	else
 542:../CMSIS/system_stm32f10x.c **** 	{
 543:../CMSIS/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:../CMSIS/system_stm32f10x.c **** 	}
 545:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:../CMSIS/system_stm32f10x.c **** #endif
 547:../CMSIS/system_stm32f10x.c ****  
 548:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:../CMSIS/system_stm32f10x.c ****       
 551:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:../CMSIS/system_stm32f10x.c ****     
 554:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:../CMSIS/system_stm32f10x.c ****     
 557:../CMSIS/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:../CMSIS/system_stm32f10x.c **** 
 561:../CMSIS/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:../CMSIS/system_stm32f10x.c ****     {
 564:../CMSIS/system_stm32f10x.c ****     }
 565:../CMSIS/system_stm32f10x.c ****   }
 566:../CMSIS/system_stm32f10x.c ****   else
 567:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:../CMSIS/system_stm32f10x.c ****   }  
 570:../CMSIS/system_stm32f10x.c **** }
 571:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:../CMSIS/system_stm32f10x.c **** /**
 573:../CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:../CMSIS/system_stm32f10x.c ****   * @param  None
 577:../CMSIS/system_stm32f10x.c ****   * @retval None
 578:../CMSIS/system_stm32f10x.c ****   */
 579:../CMSIS/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:../CMSIS/system_stm32f10x.c **** {
 581:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 582:../CMSIS/system_stm32f10x.c ****   
 583:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 585:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:../CMSIS/system_stm32f10x.c ****  
 587:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:../CMSIS/system_stm32f10x.c ****   do
 589:../CMSIS/system_stm32f10x.c ****   {
 590:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 592:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:../CMSIS/system_stm32f10x.c **** 
 594:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:../CMSIS/system_stm32f10x.c ****   {
 596:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 597:../CMSIS/system_stm32f10x.c ****   }
 598:../CMSIS/system_stm32f10x.c ****   else
 599:../CMSIS/system_stm32f10x.c ****   {
 600:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:../CMSIS/system_stm32f10x.c ****   }  
 602:../CMSIS/system_stm32f10x.c **** 
 603:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:../CMSIS/system_stm32f10x.c ****   {
 605:../CMSIS/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:../CMSIS/system_stm32f10x.c **** 
 609:../CMSIS/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:../CMSIS/system_stm32f10x.c **** #endif
 613:../CMSIS/system_stm32f10x.c ****  
 614:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:../CMSIS/system_stm32f10x.c ****       
 617:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:../CMSIS/system_stm32f10x.c ****     
 620:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:../CMSIS/system_stm32f10x.c ****     
 623:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:../CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:../CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:../CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:../CMSIS/system_stm32f10x.c **** 
 630:../CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:../CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:../CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:../CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:../CMSIS/system_stm32f10x.c ****   
 637:../CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 638:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:../CMSIS/system_stm32f10x.c ****     {
 642:../CMSIS/system_stm32f10x.c ****     }   
 643:../CMSIS/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:../CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 647:../CMSIS/system_stm32f10x.c **** #else    
 648:../CMSIS/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:../CMSIS/system_stm32f10x.c **** 
 653:../CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 654:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:../CMSIS/system_stm32f10x.c **** 
 656:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:../CMSIS/system_stm32f10x.c ****     {
 659:../CMSIS/system_stm32f10x.c ****     }
 660:../CMSIS/system_stm32f10x.c **** 
 661:../CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:../CMSIS/system_stm32f10x.c **** 
 665:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:../CMSIS/system_stm32f10x.c ****     {
 668:../CMSIS/system_stm32f10x.c ****     }
 669:../CMSIS/system_stm32f10x.c ****   }
 670:../CMSIS/system_stm32f10x.c ****   else
 671:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:../CMSIS/system_stm32f10x.c ****   } 
 674:../CMSIS/system_stm32f10x.c **** }
 675:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:../CMSIS/system_stm32f10x.c **** /**
 677:../CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:../CMSIS/system_stm32f10x.c ****   * @param  None
 681:../CMSIS/system_stm32f10x.c ****   * @retval None
 682:../CMSIS/system_stm32f10x.c ****   */
 683:../CMSIS/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:../CMSIS/system_stm32f10x.c **** {
 685:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:../CMSIS/system_stm32f10x.c ****   
 687:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 689:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:../CMSIS/system_stm32f10x.c ****  
 691:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:../CMSIS/system_stm32f10x.c ****   do
 693:../CMSIS/system_stm32f10x.c ****   {
 694:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 696:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:../CMSIS/system_stm32f10x.c **** 
 698:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:../CMSIS/system_stm32f10x.c ****   {
 700:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:../CMSIS/system_stm32f10x.c ****   }
 702:../CMSIS/system_stm32f10x.c ****   else
 703:../CMSIS/system_stm32f10x.c ****   {
 704:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:../CMSIS/system_stm32f10x.c ****   }  
 706:../CMSIS/system_stm32f10x.c **** 
 707:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:../CMSIS/system_stm32f10x.c ****   {
 709:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 711:../CMSIS/system_stm32f10x.c **** 
 712:../CMSIS/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:../CMSIS/system_stm32f10x.c ****  
 716:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:../CMSIS/system_stm32f10x.c ****       
 719:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:../CMSIS/system_stm32f10x.c ****     
 722:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:../CMSIS/system_stm32f10x.c ****     
 725:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:../CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:../CMSIS/system_stm32f10x.c ****     
 728:../CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 730:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:../CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:../CMSIS/system_stm32f10x.c **** 
 733:../CMSIS/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:../CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:../CMSIS/system_stm32f10x.c ****         
 736:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:../CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:../CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:../CMSIS/system_stm32f10x.c ****   
 741:../CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 742:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:../CMSIS/system_stm32f10x.c ****     {
 746:../CMSIS/system_stm32f10x.c ****     }
 747:../CMSIS/system_stm32f10x.c ****     
 748:../CMSIS/system_stm32f10x.c **** #else    
 749:../CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 753:../CMSIS/system_stm32f10x.c **** 
 754:../CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 755:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:../CMSIS/system_stm32f10x.c **** 
 757:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:../CMSIS/system_stm32f10x.c ****     {
 760:../CMSIS/system_stm32f10x.c ****     }
 761:../CMSIS/system_stm32f10x.c **** 
 762:../CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:../CMSIS/system_stm32f10x.c **** 
 766:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 768:../CMSIS/system_stm32f10x.c ****     {
 769:../CMSIS/system_stm32f10x.c ****     }
 770:../CMSIS/system_stm32f10x.c ****   }
 771:../CMSIS/system_stm32f10x.c ****   else
 772:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:../CMSIS/system_stm32f10x.c ****   } 
 775:../CMSIS/system_stm32f10x.c **** }
 776:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:../CMSIS/system_stm32f10x.c **** /**
 778:../CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:../CMSIS/system_stm32f10x.c ****   * @param  None
 782:../CMSIS/system_stm32f10x.c ****   * @retval None
 783:../CMSIS/system_stm32f10x.c ****   */
 784:../CMSIS/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:../CMSIS/system_stm32f10x.c **** {
 786:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 787:../CMSIS/system_stm32f10x.c ****   
 788:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 790:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:../CMSIS/system_stm32f10x.c ****  
 792:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:../CMSIS/system_stm32f10x.c ****   do
 794:../CMSIS/system_stm32f10x.c ****   {
 795:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 797:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:../CMSIS/system_stm32f10x.c **** 
 799:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:../CMSIS/system_stm32f10x.c ****   {
 801:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:../CMSIS/system_stm32f10x.c ****   }
 803:../CMSIS/system_stm32f10x.c ****   else
 804:../CMSIS/system_stm32f10x.c ****   {
 805:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:../CMSIS/system_stm32f10x.c ****   }  
 807:../CMSIS/system_stm32f10x.c **** 
 808:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:../CMSIS/system_stm32f10x.c ****   {
 810:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:../CMSIS/system_stm32f10x.c **** 
 813:../CMSIS/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:../CMSIS/system_stm32f10x.c ****  
 817:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 818:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:../CMSIS/system_stm32f10x.c ****       
 820:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:../CMSIS/system_stm32f10x.c ****     
 823:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 825:../CMSIS/system_stm32f10x.c ****     
 826:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:../CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:../CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:../CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:../CMSIS/system_stm32f10x.c ****         
 831:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:../CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 833:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:../CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:../CMSIS/system_stm32f10x.c ****   
 836:../CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 837:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:../CMSIS/system_stm32f10x.c ****     {
 841:../CMSIS/system_stm32f10x.c ****     }
 842:../CMSIS/system_stm32f10x.c ****     
 843:../CMSIS/system_stm32f10x.c ****    
 844:../CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:../CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:../CMSIS/system_stm32f10x.c **** #else    
 849:../CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:../CMSIS/system_stm32f10x.c **** 
 854:../CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 855:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:../CMSIS/system_stm32f10x.c **** 
 857:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:../CMSIS/system_stm32f10x.c ****     {
 860:../CMSIS/system_stm32f10x.c ****     }
 861:../CMSIS/system_stm32f10x.c **** 
 862:../CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:../CMSIS/system_stm32f10x.c **** 
 866:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 867:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:../CMSIS/system_stm32f10x.c ****     {
 869:../CMSIS/system_stm32f10x.c ****     }
 870:../CMSIS/system_stm32f10x.c ****   }
 871:../CMSIS/system_stm32f10x.c ****   else
 872:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:../CMSIS/system_stm32f10x.c ****   } 
 875:../CMSIS/system_stm32f10x.c **** }
 876:../CMSIS/system_stm32f10x.c **** 
 877:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:../CMSIS/system_stm32f10x.c **** /**
 879:../CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 882:../CMSIS/system_stm32f10x.c ****   * @param  None
 883:../CMSIS/system_stm32f10x.c ****   * @retval None
 884:../CMSIS/system_stm32f10x.c ****   */
 885:../CMSIS/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:../CMSIS/system_stm32f10x.c **** {
 887:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:../CMSIS/system_stm32f10x.c ****   
 889:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
 890:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 891:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:../CMSIS/system_stm32f10x.c ****  
 893:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:../CMSIS/system_stm32f10x.c ****   do
 895:../CMSIS/system_stm32f10x.c ****   {
 896:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 898:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:../CMSIS/system_stm32f10x.c **** 
 900:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 901:../CMSIS/system_stm32f10x.c ****   {
 902:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:../CMSIS/system_stm32f10x.c ****   }
 904:../CMSIS/system_stm32f10x.c ****   else
 905:../CMSIS/system_stm32f10x.c ****   {
 906:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:../CMSIS/system_stm32f10x.c ****   }  
 908:../CMSIS/system_stm32f10x.c **** 
 909:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:../CMSIS/system_stm32f10x.c ****   {
 911:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:../CMSIS/system_stm32f10x.c **** 
 914:../CMSIS/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:../CMSIS/system_stm32f10x.c ****  
 918:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:../CMSIS/system_stm32f10x.c ****       
 921:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:../CMSIS/system_stm32f10x.c ****     
 924:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:../CMSIS/system_stm32f10x.c **** 
 927:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:../CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:../CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:../CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:../CMSIS/system_stm32f10x.c ****         
 932:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:../CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:../CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:../CMSIS/system_stm32f10x.c ****   
 937:../CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
 938:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 939:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:../CMSIS/system_stm32f10x.c ****     {
 942:../CMSIS/system_stm32f10x.c ****     }
 943:../CMSIS/system_stm32f10x.c ****     
 944:../CMSIS/system_stm32f10x.c ****    
 945:../CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 947:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:../CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:../CMSIS/system_stm32f10x.c **** #else     
 950:../CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:../CMSIS/system_stm32f10x.c **** 
 954:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:../CMSIS/system_stm32f10x.c **** 
 956:../CMSIS/system_stm32f10x.c ****     /* Enable PLL */
 957:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 958:../CMSIS/system_stm32f10x.c **** 
 959:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:../CMSIS/system_stm32f10x.c ****     {
 962:../CMSIS/system_stm32f10x.c ****     }
 963:../CMSIS/system_stm32f10x.c **** 
 964:../CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:../CMSIS/system_stm32f10x.c **** 
 968:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:../CMSIS/system_stm32f10x.c ****     {
 971:../CMSIS/system_stm32f10x.c ****     }
 972:../CMSIS/system_stm32f10x.c ****   }
 973:../CMSIS/system_stm32f10x.c ****   else
 974:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:../CMSIS/system_stm32f10x.c ****   } 
 977:../CMSIS/system_stm32f10x.c **** }
 978:../CMSIS/system_stm32f10x.c **** 
 979:../CMSIS/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:../CMSIS/system_stm32f10x.c **** /**
 981:../CMSIS/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:../CMSIS/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:../CMSIS/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:../CMSIS/system_stm32f10x.c ****   * @param  None
 985:../CMSIS/system_stm32f10x.c ****   * @retval None
 986:../CMSIS/system_stm32f10x.c ****   */
 987:../CMSIS/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:../CMSIS/system_stm32f10x.c **** {
 299              		.loc 1 988 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0158 80B4     		push	{r7}
 305              	.LCFI7:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 015a 83B0     		sub	sp, sp, #12
 309              	.LCFI8:
 310              		.cfi_def_cfa_offset 16
 311 015c 00AF     		add	r7, sp, #0
 312              	.LCFI9:
 313              		.cfi_def_cfa_register 7
 989:../CMSIS/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 314              		.loc 1 989 0
 315 015e 4FF00003 		mov	r3, #0
 316 0162 7B60     		str	r3, [r7, #4]
 317 0164 4FF00003 		mov	r3, #0
 318 0168 3B60     		str	r3, [r7, #0]
 990:../CMSIS/system_stm32f10x.c ****   
 991:../CMSIS/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 992:../CMSIS/system_stm32f10x.c ****   /* Enable HSE */    
 993:../CMSIS/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 319              		.loc 1 993 0
 320 016a 3B4B     		ldr	r3, .L25
 321 016c 3A4A     		ldr	r2, .L25
 322 016e 1268     		ldr	r2, [r2, #0]
 323 0170 42F48032 		orr	r2, r2, #65536
 324 0174 1A60     		str	r2, [r3, #0]
 325              	.L19:
 994:../CMSIS/system_stm32f10x.c ****  
 995:../CMSIS/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:../CMSIS/system_stm32f10x.c ****   do
 997:../CMSIS/system_stm32f10x.c ****   {
 998:../CMSIS/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 326              		.loc 1 998 0 discriminator 1
 327 0176 384B     		ldr	r3, .L25
 328 0178 1B68     		ldr	r3, [r3, #0]
 329 017a 03F40033 		and	r3, r3, #131072
 330 017e 3B60     		str	r3, [r7, #0]
 999:../CMSIS/system_stm32f10x.c ****     StartUpCounter++;  
 331              		.loc 1 999 0 discriminator 1
 332 0180 7B68     		ldr	r3, [r7, #4]
 333 0182 03F10103 		add	r3, r3, #1
 334 0186 7B60     		str	r3, [r7, #4]
1000:../CMSIS/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 335              		.loc 1 1000 0 discriminator 1
 336 0188 3B68     		ldr	r3, [r7, #0]
 337 018a 002B     		cmp	r3, #0
 338 018c 03D1     		bne	.L18
 339 018e 7B68     		ldr	r3, [r7, #4]
 340 0190 B3F5A06F 		cmp	r3, #1280
 341 0194 EFD1     		bne	.L19
 342              	.L18:
1001:../CMSIS/system_stm32f10x.c **** 
1002:../CMSIS/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 343              		.loc 1 1002 0
 344 0196 304B     		ldr	r3, .L25
 345 0198 1B68     		ldr	r3, [r3, #0]
 346 019a 03F40033 		and	r3, r3, #131072
 347 019e 002B     		cmp	r3, #0
 348 01a0 03D0     		beq	.L20
1003:../CMSIS/system_stm32f10x.c ****   {
1004:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 349              		.loc 1 1004 0
 350 01a2 4FF00103 		mov	r3, #1
 351 01a6 3B60     		str	r3, [r7, #0]
 352 01a8 02E0     		b	.L21
 353              	.L20:
1005:../CMSIS/system_stm32f10x.c ****   }
1006:../CMSIS/system_stm32f10x.c ****   else
1007:../CMSIS/system_stm32f10x.c ****   {
1008:../CMSIS/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 354              		.loc 1 1008 0
 355 01aa 4FF00003 		mov	r3, #0
 356 01ae 3B60     		str	r3, [r7, #0]
 357              	.L21:
1009:../CMSIS/system_stm32f10x.c ****   }  
1010:../CMSIS/system_stm32f10x.c **** 
1011:../CMSIS/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 358              		.loc 1 1011 0
 359 01b0 3B68     		ldr	r3, [r7, #0]
 360 01b2 012B     		cmp	r3, #1
 361 01b4 4BD1     		bne	.L17
1012:../CMSIS/system_stm32f10x.c ****   {
1013:../CMSIS/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 362              		.loc 1 1014 0
 363 01b6 294B     		ldr	r3, .L25+4
 364 01b8 284A     		ldr	r2, .L25+4
 365 01ba 1268     		ldr	r2, [r2, #0]
 366 01bc 42F01002 		orr	r2, r2, #16
 367 01c0 1A60     		str	r2, [r3, #0]
1015:../CMSIS/system_stm32f10x.c **** 
1016:../CMSIS/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:../CMSIS/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 368              		.loc 1 1017 0
 369 01c2 264B     		ldr	r3, .L25+4
 370 01c4 254A     		ldr	r2, .L25+4
 371 01c6 1268     		ldr	r2, [r2, #0]
 372 01c8 22F00302 		bic	r2, r2, #3
 373 01cc 1A60     		str	r2, [r3, #0]
1018:../CMSIS/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 374              		.loc 1 1018 0
 375 01ce 234B     		ldr	r3, .L25+4
 376 01d0 224A     		ldr	r2, .L25+4
 377 01d2 1268     		ldr	r2, [r2, #0]
 378 01d4 42F00202 		orr	r2, r2, #2
 379 01d8 1A60     		str	r2, [r3, #0]
1019:../CMSIS/system_stm32f10x.c **** 
1020:../CMSIS/system_stm32f10x.c ****  
1021:../CMSIS/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 380              		.loc 1 1022 0
 381 01da 1F4B     		ldr	r3, .L25
 382 01dc 1E4A     		ldr	r2, .L25
 383 01de 5268     		ldr	r2, [r2, #4]
 384 01e0 5A60     		str	r2, [r3, #4]
1023:../CMSIS/system_stm32f10x.c ****       
1024:../CMSIS/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 385              		.loc 1 1025 0
 386 01e2 1D4B     		ldr	r3, .L25
 387 01e4 1C4A     		ldr	r2, .L25
 388 01e6 5268     		ldr	r2, [r2, #4]
 389 01e8 5A60     		str	r2, [r3, #4]
1026:../CMSIS/system_stm32f10x.c ****     
1027:../CMSIS/system_stm32f10x.c ****     /* PCLK1 = HCLK */
1028:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 390              		.loc 1 1028 0
 391 01ea 1B4B     		ldr	r3, .L25
 392 01ec 1A4A     		ldr	r2, .L25
 393 01ee 5268     		ldr	r2, [r2, #4]
 394 01f0 42F48062 		orr	r2, r2, #1024
 395 01f4 5A60     		str	r2, [r3, #4]
1029:../CMSIS/system_stm32f10x.c **** 
1030:../CMSIS/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:../CMSIS/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:../CMSIS/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:../CMSIS/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:../CMSIS/system_stm32f10x.c ****         
1035:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:../CMSIS/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:../CMSIS/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:../CMSIS/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:../CMSIS/system_stm32f10x.c ****   
1040:../CMSIS/system_stm32f10x.c ****     /* Enable PLL2 */
1041:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:../CMSIS/system_stm32f10x.c ****     {
1045:../CMSIS/system_stm32f10x.c ****     }
1046:../CMSIS/system_stm32f10x.c ****     
1047:../CMSIS/system_stm32f10x.c ****    
1048:../CMSIS/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:../CMSIS/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:../CMSIS/system_stm32f10x.c **** #else    
1053:../CMSIS/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1054:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 396              		.loc 1 1054 0
 397 01f6 184B     		ldr	r3, .L25
 398 01f8 174A     		ldr	r2, .L25
 399 01fa 5268     		ldr	r2, [r2, #4]
 400 01fc 22F47C12 		bic	r2, r2, #4128768
 401 0200 5A60     		str	r2, [r3, #4]
1055:../CMSIS/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 402              		.loc 1 1056 0
 403 0202 154B     		ldr	r3, .L25
 404 0204 144A     		ldr	r2, .L25
 405 0206 5268     		ldr	r2, [r2, #4]
 406 0208 42F4E812 		orr	r2, r2, #1900544
 407 020c 5A60     		str	r2, [r3, #4]
1057:../CMSIS/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:../CMSIS/system_stm32f10x.c **** 
1059:../CMSIS/system_stm32f10x.c ****     /* Enable PLL */
1060:../CMSIS/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 408              		.loc 1 1060 0
 409 020e 124B     		ldr	r3, .L25
 410 0210 114A     		ldr	r2, .L25
 411 0212 1268     		ldr	r2, [r2, #0]
 412 0214 42F08072 		orr	r2, r2, #16777216
 413 0218 1A60     		str	r2, [r3, #0]
1061:../CMSIS/system_stm32f10x.c **** 
1062:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:../CMSIS/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 414              		.loc 1 1063 0
 415 021a 00BF     		nop
 416              	.L23:
 417              		.loc 1 1063 0 is_stmt 0 discriminator 1
 418 021c 0E4B     		ldr	r3, .L25
 419 021e 1B68     		ldr	r3, [r3, #0]
 420 0220 03F00073 		and	r3, r3, #33554432
 421 0224 002B     		cmp	r3, #0
 422 0226 F9D0     		beq	.L23
1064:../CMSIS/system_stm32f10x.c ****     {
1065:../CMSIS/system_stm32f10x.c ****     }
1066:../CMSIS/system_stm32f10x.c ****     
1067:../CMSIS/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:../CMSIS/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 423              		.loc 1 1068 0 is_stmt 1
 424 0228 0B4B     		ldr	r3, .L25
 425 022a 0B4A     		ldr	r2, .L25
 426 022c 5268     		ldr	r2, [r2, #4]
 427 022e 22F00302 		bic	r2, r2, #3
 428 0232 5A60     		str	r2, [r3, #4]
1069:../CMSIS/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 429              		.loc 1 1069 0
 430 0234 084B     		ldr	r3, .L25
 431 0236 084A     		ldr	r2, .L25
 432 0238 5268     		ldr	r2, [r2, #4]
 433 023a 42F00202 		orr	r2, r2, #2
 434 023e 5A60     		str	r2, [r3, #4]
1070:../CMSIS/system_stm32f10x.c **** 
1071:../CMSIS/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:../CMSIS/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 435              		.loc 1 1072 0
 436 0240 00BF     		nop
 437              	.L24:
 438              		.loc 1 1072 0 is_stmt 0 discriminator 1
 439 0242 054B     		ldr	r3, .L25
 440 0244 5B68     		ldr	r3, [r3, #4]
 441 0246 03F00C03 		and	r3, r3, #12
 442 024a 082B     		cmp	r3, #8
 443 024c F9D1     		bne	.L24
 444              	.L17:
1073:../CMSIS/system_stm32f10x.c ****     {
1074:../CMSIS/system_stm32f10x.c ****     }
1075:../CMSIS/system_stm32f10x.c ****   }
1076:../CMSIS/system_stm32f10x.c ****   else
1077:../CMSIS/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1078:../CMSIS/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1079:../CMSIS/system_stm32f10x.c ****   }
1080:../CMSIS/system_stm32f10x.c **** }
 445              		.loc 1 1080 0 is_stmt 1
 446 024e 07F10C07 		add	r7, r7, #12
 447 0252 BD46     		mov	sp, r7
 448 0254 80BC     		pop	{r7}
 449 0256 7047     		bx	lr
 450              	.L26:
 451              		.align	2
 452              	.L25:
 453 0258 00100240 		.word	1073876992
 454 025c 00200240 		.word	1073881088
 455              		.cfi_endproc
 456              	.LFE32:
 458              	.Letext0:
 459              		.file 2 "/opt/codesourcery/arm-2012.09/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eab
 460              		.file 3 "../CMSIS/core_cm3.h"
 461              		.file 4 "../CMSIS/stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
     /tmp/cc2n6NnE.s:23     .data:00000000 SystemCoreClock
     /tmp/cc2n6NnE.s:20     .data:00000000 $d
     /tmp/cc2n6NnE.s:29     .data:00000004 AHBPrescTable
     /tmp/cc2n6NnE.s:47     .text:00000000 $t
     /tmp/cc2n6NnE.s:52     .text:00000000 SystemInit
     /tmp/cc2n6NnE.s:272    .text:0000014c SetSysClock
     /tmp/cc2n6NnE.s:114    .text:0000005c $d
     /tmp/cc2n6NnE.s:120    .text:00000068 $t
     /tmp/cc2n6NnE.s:125    .text:00000068 SystemCoreClockUpdate
     /tmp/cc2n6NnE.s:260    .text:00000138 $d
     /tmp/cc2n6NnE.s:268    .text:0000014c $t
     /tmp/cc2n6NnE.s:297    .text:00000158 SetSysClockTo72
     /tmp/cc2n6NnE.s:453    .text:00000258 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.f2b32ee49e703f71d2941adfc5f04874
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.9a9f642c8c562acb4a63ad5d933b7c01
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.6e7f2924f39c60c10815105b99b8b446
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:00000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.968bcf08d813e68e57c280a4da69fa5a
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_sdio.h.25.1fb5280a7690ef99070096bf8c866b3a
                           .group:00000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe

NO UNDEFINED SYMBOLS
